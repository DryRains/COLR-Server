name: CI&CD Settings

on:
  pull_request:
    types: [closed] # (1).PR이 닫혔을때 발동(=Merge가 되었을 때)
  workflow_dispatch: # (2).수동 실행도 가능하도록

jobs:
  build:
    runs-on: ubuntu-latest # (3).OS환경
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'local' # (3).'local' 브랜치에 merge 될 때 발동

    steps:
      - name: Checkout
        uses: actions/checkout@v2 # (4). github에서 제공하는 code check out ver.2 기능 이용

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11 # (5).자바 설치
          distribution: 'adopt' # (5).자바 설치시 사용할 세부 설정(not important)

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash # (6).권한 부여

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash # (7).build시작

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" # (8).build시점의 시간확보(타임스탬프 기록)

      - name: Show Current Time
        run: echo "CurrentTime=$"
        shell: bash # (9).확보한 시간 보여주기

      - name: Generate deployment package
        # 리눅스 명령어 -
        #1. deploy라는 디렉토리 생성
        #2. 배포할 대상 프로젝트의 build/libs 경로의 jar파일을 배포 후 프로젝트의 deploy/application.jar 파일로 복사
        #3. Procfile도 넣어주고
        #4. ebextensions(elasic beanstalk에 업로드 시 일종의 조언&요청이 담긴 파일)
        #5. 플랫폼(이 경우 nginx)도 담고
        #6. 이후 압축
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions-dev deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

#      - name: Beanstalk Deploy
#        uses: einaregilsson/beanstalk-deploy@v20
#        with:
#          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
#          application_name: breifing-dev
#          environment_name: Breifing-dev-env
#          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
#          region: ap-northeast-1
#          deployment_package: deploy/deploy.zip
#          wait_for_deployment: false
